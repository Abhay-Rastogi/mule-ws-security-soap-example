<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- ********************************************** -->
	<!-- **************** PROJECT INFO **************** -->
	<!-- ********************************************** -->

	<groupId>com.wandrell.example</groupId>
	<artifactId>mule-wss-soap-example</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>mule</packaging>

	<name>Secured Soap Web Services in Mule Example</name>
	<description>An example showing how to set up secured SOAP web services in Mule</description>
	<url>https://github.com/bernardo-mg/mule-wss-soap-example</url>
	<inceptionYear>2016</inceptionYear>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<!-- ********************************************** -->
	<!-- ********* INFRASTRUCTURE AND SERVICES ******** -->
	<!-- ********************************************** -->

	<scm>
		<connection>scm:git:https://github.com/bernardo-mg/mule-wss-soap-example.git</connection>
		<developerConnection>scm:git:https://github.com/bernardo-mg/mule-wss-soap-example.git</developerConnection>
		<tag>head</tag>
		<url>https://www.github.com/bernardo-mg/mule-wss-soap-example</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://www.github.com/bernardo-mg/mule-wss-soap-example/issues</url>
	</issueManagement>

	<ciManagement>
		<system>Travis CI</system>
		<url>https://travis-ci.org/Bernardo-MG/mule-wss-soap-example</url>
		<notifiers />
	</ciManagement>

	<!-- ********************************************** -->
	<!-- ****************** PROFILES ****************** -->
	<!-- ********************************************** -->

	<profiles>
		<profile>
			<!-- Profile for the Eclipse Maven plugin -->
			<!-- Sets the POM so this plugin does not give the usual unregistered 
				goals errors -->
			<!-- It will be activated automatically on Eclipse if this has the m2e 
				plugin, by detecting the version property -->
			<id>eclipse</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<!-- m2e lifecycle mapping -->
							<!-- This is used to configure the Maven plugin for Eclipse. -->
							<!-- Among other things, it allows registering goals, which Eclipse 
								would otherwise reject. -->
							<!-- It has no real effect on Maven. -->
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>${plugin.lifecycle.version}</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<!-- jacoco plugin configuration -->
											<!-- Fixes the errors with Eclipse not recognizing the plugin 
												configuration -->
											<pluginExecutionFilter>
												<groupId>org.jacoco</groupId>
												<artifactId>jacoco-maven-plugin</artifactId>
												<versionRange>[0.5,)</versionRange>
												<goals>
													<!-- The 'prepare-agent' goal is registered to m2e. -->
													<goal>prepare-agent</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<!-- As m2e doesn't know what to do with jacoco, it is ignored 
													to avoid error warnings. -->
												<ignore />
											</action>
										</pluginExecution>
										<pluginExecution>
											<!-- Mule app -->
											<pluginExecutionFilter>
												<groupId>org.mule.tools.maven</groupId>
												<artifactId>mule-app-maven-plugin</artifactId>
												<versionRange>${plugin.mule.version}</versionRange>
												<goals>
													<goal>filter-resources</goal>
													<goal>attach-test-resources</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore />
											</action>
										</pluginExecution>
										<!-- Build helper plugin configuration -->
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>build-helper-maven-plugin</artifactId>
												<versionRange>${plugin.buildhelper.version}</versionRange>
												<goals>
													<goal>add-source</goal>
													<goal>add-test-source</goal>
													<goal>add-resource</goal>
													<goal>add-test-resource</goal>
													<goal>maven-version</goal>
													<goal>parse-version</goal>
													<goal>timestamp-property</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<execute>
													<runOnConfiguration>true</runOnConfiguration>
													<runOnIncremental>true</runOnIncremental>
												</execute>
											</action>
										</pluginExecution>
										<pluginExecution>
											<!-- CXF plugin -->
											<pluginExecutionFilter>
												<groupId>org.apache.cxf</groupId>
												<artifactId>cxf-codegen-plugin</artifactId>
												<versionRange>${plugin.cxf.version}</versionRange>
												<goals>
													<goal>wsdl2java</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore />
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
								<downloadSources>true</downloadSources>
								<downloadJavadocs>true</downloadJavadocs>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<!-- Release site deployment profile -->
			<!-- Sets the site repository to point to the releases repo -->
			<id>deploy-site-release</id>
			<activation>
				<!-- Active by default so the repository appears in the reports -->
				<activeByDefault>true</activeByDefault>
			</activation>
			<distributionManagement>
				<site>
					<id>site</id>
					<name>Project Documentation Site</name>
					<url>ftp://docs.wandrell.com/swss-soap-example</url>
				</site>
			</distributionManagement>
		</profile>
		<profile>
			<!-- Development site deployment profile -->
			<!-- Sets the site repository to point to the development repo -->
			<id>deploy-site-development</id>
			<distributionManagement>
				<site>
					<id>site-development</id>
					<name>Project Development Documentation Site</name>
					<url>ftp://docs.wandrell.com/swss-soap-example</url>
				</site>
			</distributionManagement>
		</profile>
		<profile>
			<!-- Deployment profile -->
			<!-- Sets ups the environment for deployment -->
			<id>deployment</id>
			<properties>
				<!-- Tests are skipped -->
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
	</profiles>

	<!-- ********************************************** -->
	<!-- *********** ORGANIZATION AND MEMBERS ********* -->
	<!-- ********************************************** -->

	<organization>
		<name>Bernardo Martínez Garrido</name>
		<url>https://github.com/Bernardo-MG</url>
	</organization>

	<developers>
		<developer>
			<id>bmg</id>
			<name>Bernardo Martínez Garrido</name>
			<email>programming@wandrell.com</email>
			<url>https://github.com/Bernardo-MG</url>
			<organization>Bernardo Martínez Garrido</organization>
			<organizationUrl>https://github.com/Bernardo-MG</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
			<properties />
		</developer>
	</developers>

	<!-- ********************************************** -->
	<!-- **************** PROPERTIES ****************** -->
	<!-- ********************************************** -->

    <properties>
        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
        <!-- Java version -->
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
        <!-- Manifest data -->
        <manifest.name>com/wandrell/demo/mule_spring_soap_ws_security_example</manifest.name>
        <!-- Dependencies versions -->
        <asm.version>3.3.1</asm.version>
        <commons.codec.version>1.9</commons.codec.version>
        <commons.collections.version>3.2.2</commons.collections.version>
        <commons.dbcp.version>1.2</commons.dbcp.version>
        <commons.logging.version>1.2</commons.logging.version>
        <commons.pool.version>1.6</commons.pool.version>
        <ehcache.version>2.5.1</ehcache.version>
        <h2.version>1.4.190</h2.version>
        <hibernate.jpa.version>1.0.1.Final</hibernate.jpa.version>
        <hibernate.validator.version>5.1.0.Final</hibernate.validator.version>
        <hibernate.version>3.6.0.Final</hibernate.version>
        <hikari.version>2.3.12</hikari.version>
        <javax.el.version>3.0.0</javax.el.version>
        <jaxb.version>2.2.12</jaxb.version>
        <jaxen.version>1.1.1</jaxen.version>
        <jboss.logging.version>3.3.0.Final</jboss.logging.version>
        <jcodings.version>1.0.10</jcodings.version>
        <jffi.version>1.2.11</jffi.version>
        <jnr.ffi.version>1.0.4</jnr.ffi.version>
        <junit.version>4.12</junit.version>
        <log4j.version>2.1</log4j.version>
        <mail.version>1.4.7</mail.version>
        <mina.version>2.0.4</mina.version>
        <mule.tools.version>1.1</mule.tools.version>
        <mule.version>3.7.0</mule.version>
        <opensaml.version>2.6.1</opensaml.version>
        <slf4j.version>1.7.13</slf4j.version>
        <spring.data.version>1.9.0.RELEASE</spring.data.version>
        <spring.version>4.1.6.RELEASE</spring.version>
        <spring.ws.version>2.2.2.RELEASE</spring.ws.version>
        <stax.version>1.0-2</stax.version>
        <testng.version>6.9.8</testng.version>
        <wss4j.version>1.6.19</wss4j.version>
        <xpp3.version>1.1.4c</xpp3.version>
        <xerces.version>2.11.0</xerces.version>
        <xmlapis.version>1.4.01</xmlapis.version>
        <xwssecurity.version>3.0</xwssecurity.version>
        <!-- Plugins versions -->
        <plugin.ant.version>1.8</plugin.ant.version>
        <plugin.assembly.version>2.6</plugin.assembly.version>
        <plugin.buildhelper.version>1.7</plugin.buildhelper.version>
        <plugin.checkstyle.version>2.16</plugin.checkstyle.version>
        <plugin.changes.version>2.11</plugin.changes.version>
        <plugin.clean.version>2.6.1</plugin.clean.version>
        <plugin.compiler.version>3.3</plugin.compiler.version>
        <plugin.cxf.version>2.7.18</plugin.cxf.version>
        <plugin.dependency.version>2.10</plugin.dependency.version>
        <plugin.deploy.version>2.8.2</plugin.deploy.version>
        <plugin.enforcer.version>1.4.1</plugin.enforcer.version>
        <plugin.failsafe.version>2.18.1</plugin.failsafe.version>
        <plugin.findbugs.version>3.0.2</plugin.findbugs.version>
        <plugin.install.version>2.5.2</plugin.install.version>
        <plugin.jacoco.version>0.7.5.201505241946</plugin.jacoco.version>
        <plugin.jar.version>2.6</plugin.jar.version>
        <plugin.javadoc.version>2.10.3</plugin.javadoc.version>
        <plugin.jdepend.version>2.0</plugin.jdepend.version>
        <plugin.jxr.version>2.5</plugin.jxr.version>
        <plugin.lifecycle.version>1.0.0</plugin.lifecycle.version>
        <plugin.mule.version>${mule.tools.version}</plugin.mule.version>
        <plugin.pmd.version>3.5</plugin.pmd.version>
        <plugin.release.version>2.5.2</plugin.release.version>
        <plugin.reports.version>2.8.1</plugin.reports.version>
        <plugin.resources.version>2.7</plugin.resources.version>
        <plugin.site.version>3.4</plugin.site.version>
        <plugin.site.velocity.version>1.7</plugin.site.velocity.version>
        <plugin.source.version>2.4</plugin.source.version>
        <plugin.surefire.version>2.18.1</plugin.surefire.version>
        <plugin.taglist.version>2.4</plugin.taglist.version>
        <plugin.war.version>2.6</plugin.war.version>
    </properties>

    <!-- ********************************************** -->
    <!-- *************** REPOSITORIES ***************** -->
    <!-- ********************************************** -->

    <repositories>
        <repository>
            <id>Central</id>
            <name>Central</name>
            <url>http://repo1.maven.org/maven2/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>http://repository.mulesoft.org/releases/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>mulesoft-snapshots</id>
            <name>MuleSoft Snapshots Repository</name>
            <url>http://repository.mulesoft.org/snapshots/</url>
            <layout>default</layout>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>mulesoft-release</id>
            <name>mulesoft release repository</name>
            <layout>default</layout>
            <url>http://repository.mulesoft.org/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!-- ********************************************** -->
    <!-- *************** DEPENDENCIES ***************** -->
    <!-- ********************************************** -->

    <dependencies>
        <!-- Xml configuration -->
        <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-spring-config</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Mule Transports -->
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-file</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-http</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Commons Codec -->
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-jdbc</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-jms</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-vm</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Mule Modules -->
        <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-scripting</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Jnr Ffi -->
            <groupId>com.github.jnr</groupId>
            <artifactId>jnr-ffi</artifactId>
            <version>${jnr.ffi.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- JFfi -->
            <groupId>com.github.jnr</groupId>
            <artifactId>jffi</artifactId>
            <version>${jffi.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- JCodings -->
            <groupId>org.jruby.jcodings</groupId>
            <artifactId>jcodings</artifactId>
            <version>${jcodings.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-xml</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- XPP3 min -->
            <groupId>xpp3</groupId>
            <artifactId>xpp3_min</artifactId>
            <version>${xpp3.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Jaxen -->
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>${jaxen.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- XPP3 min -->
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>${xmlapis.version}</version>
        </dependency>
        <!-- ============================================== -->
        <!-- ================== SPRING ==================== -->
        <!-- ============================================== -->
        <dependency>
            <!-- Spring Transaction -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <!-- Spring Beans -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <!-- Spring Data JPA -->
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring.data.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- Spring JDBC -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <!-- Spring ORM -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <!-- Spring JMS -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <!-- Spring Context -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <!-- Spring WS -->
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-core</artifactId>
            <version>${spring.ws.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- Spring Web -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- ============================================== -->
        <!-- ================= HIBERNATE ================== -->
        <!-- ============================================== -->
        <dependency>
            <!-- Entity JPA -->
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>${hibernate.jpa.version}</version>
        </dependency>
        <dependency>
            <!-- Entity Manager -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate.javax.persistence</groupId>
                    <artifactId>hibernate-jpa-2.0-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- Hibernate Ehcache -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <!-- Hibernate Validator -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>
        <!-- ============================================== -->
        <!-- ================ PERSISTENCE ================= -->
        <!-- ============================================== -->
        <dependency>
            <!-- H2 -->
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>
        <dependency>
            <!-- Apache Commons DBCP2 -->
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons.dbcp.version}</version>
        </dependency>
        <dependency>
            <!-- Hikari CP -->
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP-java6</artifactId>
            <version>${hikari.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- ============================================== -->
        <!-- ================== LOGGING =================== -->
        <!-- ============================================== -->
        <dependency>
            <!-- Log4j SLF4J Bridge -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <!-- SLF4J API -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <!-- LOG4J -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <!-- JBoss Logging -->
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>${jboss.logging.version}</version>
        </dependency>
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>${xerces.version}</version>
        </dependency>
        <!-- ============================================== -->
        <!-- ================= SECURITY =================== -->
        <!-- ============================================== -->
        <dependency>
            <!-- XWS Security -->
            <groupId>com.sun.xml.wss</groupId>
            <artifactId>xws-security</artifactId>
            <version>${xwssecurity.version}</version>
            <exclusions>
                <exclusion>
                    <!-- This dependency is not public or shared -->
                    <groupId>javax.xml.crypto</groupId>
                    <artifactId>xmldsig</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- WSS4J -->
            <groupId>org.apache.ws.security</groupId>
            <artifactId>wss4j</artifactId>
            <version>${wss4j.version}</version>
        </dependency>
        <!-- ============================================== -->
        <!-- =================== OTHER ==================== -->
        <!-- ============================================== -->
        <dependency>
            <!-- JAXB API -->
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb.version}</version>
        </dependency>
        <dependency>
            <!-- Java Mail -->
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>${mail.version}</version>
        </dependency>
        <dependency>
            <!-- Java Mail -->
            <groupId>javax.xml.stream</groupId>
            <artifactId>stax-api</artifactId>
            <version>${stax.version}</version>
        </dependency>
        <dependency>
            <!-- Commons Logging -->
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons.logging.version}</version>
        </dependency>
        <dependency>
            <!-- Commons Pool -->
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${commons.pool.version}</version>
        </dependency>
        <dependency>
            <!-- Commons Collections -->
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons.collections.version}</version>
        </dependency>
        <dependency>
            <!-- OpenSAML -->
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml</artifactId>
            <version>${opensaml.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- ehcache core -->
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- ehcache core -->
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
            <version>${asm.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- ============================================== -->
        <!-- ======= TEST ENVIRONMENT DEPENDENCIES ======== -->
        <!-- ============================================== -->
        <dependency>
            <!-- Mule Functional Tests -->
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-functional</artifactId>
            <version>${mule.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- Mule Client -->
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-client</artifactId>
            <version>${mule.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Mina Core -->
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-core</artifactId>
            <version>${mina.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- TestNG -->
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Spring test -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- JUnit -->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- CXF Module -->
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-cxf</artifactId>
            <version>${mule.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Patterns Module -->
            <groupId>org.mule.patterns</groupId>
            <artifactId>mule-pattern-core</artifactId>
            <version>${mule.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- JavaX EL API -->
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>${javax.el.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-http</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-tcp</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

	<!-- ********************************************** -->
	<!-- ******************* BUILD ******************** -->
	<!-- ********************************************** -->

	<build>
		<defaultGoal>clean package</defaultGoal>
		<pluginManagement>
			<plugins>
				<!-- The following plugins always appear on the plugins list, even when 
					they have not been added to the project. -->
				<!-- This configuration block allows keeping them always updated. -->
				<plugin>
					<!-- Dependency -->
					<!-- Takes care of dependencies, both copying and showing their info. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${plugin.dependency.version}</version>
				</plugin>
				<plugin>
					<!-- Assembly -->
					<!-- Builds a distributable file from all the project components. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${plugin.assembly.version}</version>
				</plugin>
				<plugin>
					<!-- Release -->
					<!-- Generates releases and updates the project. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${plugin.release.version}</version>
				</plugin>
				<plugin>
					<!-- Ant Run -->
					<!-- Capable of handling Ant scripts. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${plugin.ant.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<!-- Clean -->
				<!-- Cleans the output folder. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${plugin.clean.version}</version>
			</plugin>
			<plugin>
				<!-- Resources -->
				<!-- Handles the project resources. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${plugin.resources.version}</version>
			</plugin>
			<plugin>
				<!-- Compiler -->
				<!-- Handles the source code. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${plugin.compiler.version}</version>
			</plugin>
			<plugin>
				<!-- Install -->
				<!-- Installs the project into the local Maven repository. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${plugin.install.version}</version>
			</plugin>
			<plugin>
				<!-- Enforcer -->
				<!-- Stops the project from being built if it does not comply with a 
					set of rules. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${plugin.enforcer.version}</version>
				<executions>
					<execution>
						<id>enforce</id>
						<configuration>
							<rules>
								<!-- Dependencies convergence. -->
								<!-- This is a less restrictive version of the rule. -->
								<requireUpperBoundDeps />
								<!-- Not obsolete JDK. -->
								<requireJavaVersion>
									<version>[1.7,)</version>
								</requireJavaVersion>
								<!-- No plugin without version. -->
								<requirePluginVersions>
									<message>Best Practice is to always define plugin versions!</message>
									<banLatest>true</banLatest>
									<banRelease>true</banRelease>
									<banSnapshots>true</banSnapshots>
									<phases>clean,deploy,site,test,verify</phases>
								</requirePluginVersions>
								<!-- Source encoding should be set. -->
								<requireProperty>
									<property>project.build.sourceEncoding</property>
									<message>Indicate the source encoding for the project.</message>
									<regex>.*</regex>
									<regexMessage>It should be a valid text encoding format.</regexMessage>
								</requireProperty>
								<!-- Report output encoding should be set. -->
								<requireProperty>
									<property>project.reporting.outputEncoding</property>
									<message>Indicate the encoding for the reporting output.</message>
									<regex>.*</regex>
									<regexMessage>It should be a valid text encoding format.</regexMessage>
								</requireProperty>
								<!-- Source JDK should be set. -->
								<requireProperty>
									<property>maven.compiler.source</property>
									<message>Indicate the source JDK.</message>
									<regex>\d+\.\d+[\.\d+]?.*</regex>
									<regexMessage>It should be a valid JDK version.</regexMessage>
								</requireProperty>
								<!-- Target JDK should be set. -->
								<requireProperty>
									<property>maven.compiler.target</property>
									<message>Indicate the target JDK.</message>
									<regex>\d+\.\d+[\.\d+]?.*</regex>
									<regexMessage>It should be a valid JDK version.</regexMessage>
								</requireProperty>
								<!-- Manifest name should be given. -->
								<requireProperty>
									<property>manifest.name</property>
									<message>Give a name for the manifest.</message>
									<regex>.*</regex>
									<regexMessage>It should be a valid name.</regexMessage>
								</requireProperty>
							</rules>
						</configuration>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Failsafe -->
				<!-- Runs integration tests -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${plugin.failsafe.version}</version>
				<configuration>
					<properties>
						<property>
							<name>usedefaultlisteners</name>
							<key>false</key>
						</property>
						<property>
							<name>suitename</name>
							<value>${project.groupId}.${project.artifactId}_Integration_Suite</value>
						</property>
					</properties>
					<suiteXmlFiles>
						<!-- Path to the integration tests suite file -->
						<suiteXmlFile>${project.build.testOutputDirectory}/tests_maven_integration_suite.xml</suiteXmlFile>
					</suiteXmlFiles>
					<!-- To avoid memory problems when running the tests -->
					<argLine>-Xmx1024m -Xms1024m -XX:MaxPermSize=512m -XX:PermSize=256m</argLine>
				</configuration>
				<executions>
					<execution>
						<id>failsafe-integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>failsafe-verify</id>
						<phase>verify</phase>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- JaCoCo -->
				<!-- Generates coverage reports from Surefire and Failsafe -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${plugin.jacoco.version}</version>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-test-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Jar -->
				<!-- Generates the jar file -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${plugin.jar.version}</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<addExtensions>false</addExtensions>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<packageName>${project.groupId}</packageName>
						</manifest>
						<manifestEntries>
							<name>${manifest.name}</name>
							<url>${project.url}</url>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<!-- Site -->
				<!-- Generates the Maven Site -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${plugin.site.version}</version>
			</plugin>
			<plugin>
				<!-- Source -->
				<!-- Bundles the source into a jar -->
				<artifactId>maven-source-plugin</artifactId>
				<version>${plugin.source.version}</version>
				<executions>
					<execution>
						<!-- Generates the jar for the deployment -->
						<id>attach-sources</id>
						<phase>deploy</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Javadoc -->
				<!-- Generates javadocs -->
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${plugin.javadoc.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>deploy</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Deploy -->
				<!-- Takes care of the deployment phase -->
				<!-- It is set to generate and deploy a POM file along the artifact -->
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${plugin.deploy.version}</version>
				<executions>
					<execution>
						<id>deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
						<configuration>
							<generatePom>true</generatePom>
							<url>${project.distributionManagement.repository.url}</url>
							<file>${project.build.directory}/${project.build.finalName}.jar</file>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Changes -->
				<!-- Takes care of the changes log -->
				<!-- It is set to also validate the changes log file -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${plugin.changes.version}</version>
				<executions>
					<execution>
						<id>check-changes</id>
						<phase>verify</phase>
						<goals>
							<goal>changes-check</goal>
						</goals>
					</execution>
					<execution>
						<id>validate-changes</id>
						<phase>pre-site</phase>
						<goals>
							<goal>changes-validate</goal>
						</goals>
						<configuration>
							<failOnError>true</failOnError>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Surefire -->
				<!-- Runs unit tests -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${plugin.surefire.version}</version>
				<configuration>
					<properties>
						<property>
							<!-- Default listeners disabled to avoid conflicts with TestNG -->
							<name>usedefaultlisteners</name>
							<key>false</key>
						</property>
						<property>
							<name>suitename</name>
							<value>${project.groupId}.${project.artifactId}_Unit_Suite</value>
						</property>
					</properties>
					<suiteXmlFiles>
						<!-- Path to the unit tests suite file -->
						<suiteXmlFile>${project.build.testOutputDirectory}/tests_maven_unit_suite.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>
			<plugin>
				<!-- Mule App -->
				<groupId>org.mule.tools.maven</groupId>
				<artifactId>mule-app-maven-plugin</artifactId>
				<version>${plugin.mule.version}</version>
				<extensions>true</extensions>
				<configuration>
					<copyToAppsDirectory>true</copyToAppsDirectory>
				</configuration>
			</plugin>
			<plugin>
				<!-- Build Helper -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${plugin.buildhelper.version}</version>
				<executions>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/app/</directory>
								</resource>
								<resource>
									<directory>mappings/</directory>
								</resource>
								<resource>
									<directory>src/main/api/</directory>
								</resource>
							</resources>
							<sources>
								<!-- CXF generated sources -->
								<source>${project.build.directory}/generated/cxf</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- CXF code generator -->
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-codegen-plugin</artifactId>
				<version>${plugin.cxf.version}</version>
				<executions>
					<execution>
						<id>generate-sources</id>
						<phase>generate-sources</phase>
						<configuration>
							<sourceRoot>${project.build.directory}/generated/cxf</sourceRoot>
							<wsdlOptions>
								<wsdlOption>
									<wsdl>${basedir}/src/main/resources/wsdl/ExampleEntity.wsdl</wsdl>
									<wsdlLocation>classpath:wsdl/ExampleEntity.wsdl</wsdlLocation>
									<extraargs>
										<extraarg>-client</extraarg>
										<extraarg>-verbose</extraarg>
										<extraarg>-p</extraarg>
										<extraarg>com.wandrell.example.mule.wss.generated</extraarg>
									</extraargs>
								</wsdlOption>
							</wsdlOptions>
						</configuration>
						<goals>
							<goal>wsdl2java</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
						<version>${xerces.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<!-- ********************************************** -->
	<!-- ****************** REPORTS ******************* -->
	<!-- ********************************************** -->

	<reporting>
		<plugins>
			<plugin>
				<!-- Project Info -->
				<!-- Generates general information reports -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${plugin.reports.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>license</report>
							<report>modules</report>
							<report>project-team</report>
							<report>dependency-info</report>
							<report>dependency-management</report>
							<report>plugins</report>
							<report>plugin-management</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<!-- Dependency -->
				<!-- Generates a list of used and unused dependencies. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${plugin.dependency.version}</version>
			</plugin>
			<plugin>
				<!-- JXR -->
				<!-- Generates references to the source files, used by other reports -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${plugin.jxr.version}</version>
			</plugin>
			<plugin>
				<!-- Javadoc -->
				<!-- Generates the javadocs -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${plugin.javadoc.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<!-- Changes -->
				<!-- Generates the changes report from the changes log -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${plugin.changes.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<!-- Taglist -->
				<!-- Generates a report of all the temporal tags still on the code -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${plugin.taglist.version}</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Deprecation</displayName>
								<tags>
									<tag>
										<matchString>deprecated</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>Todo Work</displayName>
								<tags>
									<tag>
										<matchString>todo</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>
			<plugin>
				<!-- Checkstyle -->
				<!-- Checks that the source files comply with style standards -->
				<!-- It is using a customized rules file -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${plugin.checkstyle.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<!-- The customized rules file -->
					<configLocation>${project.basedir}/src/config/checkstyle/checkstyle-rules.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<!-- FindBugs -->
				<!-- Checks for patterns which are prone to errors -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${plugin.findbugs.version}</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Low</threshold>
				</configuration>
			</plugin>
			<plugin>
				<!-- PMD -->
				<!-- Checks that the code complies with a series of code quality rules -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${plugin.pmd.version}</version>
				<configuration>
					<linkXref>true</linkXref>
					<!-- This will generate always the report, even if empty -->
					<skipEmptyReport>false</skipEmptyReport>
					<excludes>
						<exclude>**/*Bean.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/generated-sources/stubs</excludeRoot>
					</excludeRoots>
					<rulesets>
						<ruleset>${project.basedir}/src/config/pmd/pmd-rules.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>
			<plugin>
				<!-- Surefire -->
				<!-- Generates the unit tests report -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${plugin.surefire.version}</version>
			</plugin>
			<plugin>
				<!-- JaCoCo -->
				<!-- Generates the coverage report -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${plugin.jacoco.version}</version>
			</plugin>
			<plugin>
				<!-- JDepend -->
				<!-- Generates the dependencies report -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>${plugin.jdepend.version}</version>
			</plugin>
			<plugin>
				<!-- WAR -->
				<!-- Generates the war file -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${plugin.war.version}</version>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<webResources>
						<resource>
							<!-- Persistence access data -->
							<filtering>true</filtering>
							<directory>${project.basedir}/src/main/resources/context</directory>
							<targetPath>WEB-INF/classes/context</targetPath>
							<includes>
								<include>persistence-access.properties</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
